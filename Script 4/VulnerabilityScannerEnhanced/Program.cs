using System;
using System.Net.Sockets;
using System.Threading.Tasks;

namespace EnhancedVulnerabilityScanner
{
    class Program
    {
        static async Task Main(string[] args)
        {
            Console.Write("Enter target IP: ");
            string targetIP = Console.ReadLine();

            var tasks = new Task[1024];
            for (int port = 1; port <= 1024; port++)
            {
                int localPort = port;
                tasks[port - 1] = Task.Run(() => ScanPortAsync(targetIP, localPort));
            }

            await Task.WhenAll(tasks);
        }

        private static async Task ScanPortAsync(string host, int port)
        {
            using (TcpClient client = new TcpClient())
            {
                try
                {
                    await client.ConnectAsync(host, port);
                    Console.WriteLine($"Port {port} is open!");
                }
                catch (Exception ex) when (ex is SocketException || ex is ObjectDisposedException)
                {
                    // Ignore expected exceptions when connection can't be made
                }
            }
        }
    }
}
